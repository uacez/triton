name: Build Triton 2.1.0 for Windows (Python 3.12, CUDA 12.1)

on:
  workflow_dispatch:
    inputs:
      triton_version:
        description: 'Triton version to build'
        required: true
        default: '2.1.0'

jobs:
  build-windows-wheel:
    runs-on: windows-latest
    steps:
      - name: Checkout Triton repository
        uses: actions/checkout@v4
        with:
          repository: openai/triton
          ref: v2.1.0
          submodules: recursive

      - name: Install CUDA 12.1
        uses: Jimver/cuda-toolkit@v0.2.16
        with:
          cuda: '12.1.0'
          method: network
          sub-packages: '['nvcc', 'cudart', 'cublas', 'cufft', 'curand']'

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel ninja cmake
          python -m pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

      - name: Apply Triton patches for Python 3.12 compatibility
        run: |
          # Fix setup.py for Python 3.12 compatibility
          (Get-Content -Path setup.py) -replace 'distutils.core', 'setuptools' | Set-Content -Path setup.py
          # Fix CUDA version check
          (Get-Content -Path csrc/triton/CMakeLists.txt) -replace '12.0', '12.1' | Set-Content -Path csrc/triton/CMakeLists.txt

      - name: Build Triton wheel
        run: |
          $env:CUDA_HOME = "${{ env.CUDA_PATH }}"
          $env:PATH = "${{ env.CUDA_PATH }}\bin;$env:PATH"
          python setup.py bdist_wheel --cmake-flags="-DCUDA_ARCH_LIST=7.0;7.5;8.0;8.6" --cuda-path="${{ env.CUDA_PATH }}"

      - name: Upload wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: triton-wheels
          path: dist/*.whl
